apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-server
  template:
    metadata:
      labels:
        app: nginx-server
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
          - name: podinfo
            mountPath: /usr/share/nginx/html/index.html
            subPath: index.html
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "index.html"
                fieldRef:
                  fieldPath: metadata.name
---
#Below service talks about headless service with selector
apiVersion: v1
kind: Service
metadata:
  name: headleservice
spec:
  clusterIP: None # <-- Don't forget!!
  selector:
    app: nginx-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
#If we want to peform the above actions from CLI:
# kubectl create deployment nginx --image=nginx
# kubectl scale --replicas=5 deployment nginx
# kubectl expose deployment nginx --name headlessservice --cluster-ip=None
# kubectl expose deployment nginx --name nginxclusterip --port=80  --target-port=80

# kubectl run --generator=run-pod/v1 --rm utils -it --image dubareddy/utils:latest bash

#Once you login to pod execute command "host headlessservice" and for loop to check loadbalance

#for i in $(seq 1 10);do curl headlessservice;done

#Below Example can be tested once we have some idea about Stateful set applications
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
        - name: www
          downwardAPI:
            items:
              - path: "index.html"
                fieldRef:
                  fieldPath: metadata.name