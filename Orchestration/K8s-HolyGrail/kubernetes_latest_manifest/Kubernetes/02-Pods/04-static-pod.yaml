# Static Pods are managed directly by the kubelet daemon on a specific node
# First, lets choose the node where to launch the static pod
# Choose a directory /etc/kubelet.d/ and place the static pod yaml
# /etc/kubelet.d/static-web.yaml and update path to kubelet service
# Run this command on the node where kubelet is running
# mkdir /etc/kubelet.d/
# cat /etc/kubelet.d/static-web.yaml
apiVersion: v1
kind: Pod
metadata:
  name: static-web
  labels:
    role: myrole
spec:
  containers:
    - name: web
      image: nginx
      ports:
        - name: web
          containerPort: 80
          protocol: TCP
# Open the service file under "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
# add entry as mentioned below
# --pod-manifest-path=/etc/kubelet.d/
# root@workernodeone:/etc/systemd/system/kubelet.service.d# cat 10-kubeadm.conf
# Note: This dropin only works with kubeadm and kubelet v1.11+
# [Service]
# Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
# Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
# This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
# EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
# This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
# the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
# EnvironmentFile=-/etc/default/kubelet
# ExecStart=
# ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS --pod-manifest-path=/etc/kubelet.d/
# root@workernodeone:/etc/systemd/system/kubelet.service.d#
# Execute below commands
# systemctl daemon-reload and then restart kubelet service #systemctl restart kubelet