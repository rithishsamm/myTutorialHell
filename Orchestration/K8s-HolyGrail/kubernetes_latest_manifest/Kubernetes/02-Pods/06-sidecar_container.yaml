apiVersion: v1
kind: Pod
metadata:
  name: multi-container-pod # Name of our pod
spec:
  volumes:
  - name: shared-date-logs  # Creating a shared volume for my containers
    emptyDir: {}
  containers:
  - name: container-writing-dates # Name of first container
    image: alpine # Image to use for first container
    command: ["/bin/sh"]
    args: ["-c", "while true; do date >> /var/log/index.html; sleep 10;done"] # writing date every 10secs
    volumeMounts:
    - name: shared-date-logs
      mountPath: /var/log # Mounting log dir so app can write to it.
  - name: container-serving-dates # Name of second container
    image: nginx:1.19.0 # Image for second container
    ports:
      - containerPort: 80 # Defining what port to use.
    volumeMounts:
    - name: shared-date-logs
      mountPath: /usr/share/nginx/html # Where nginx will serve the written file
---
apiVersion: v1
kind: Pod
metadata:
  name: sidecar-pod # Name of our pod
spec:
  volumes:
  - name: html  # Creating a shared volume for my containers
    emptyDir: {}
  containers:
  - name: 1st
    image: nginx
    volumeMounts:
    - name: html
      mountPath: /usr/share/nginx/html
    ports:
    - name: http
      hostPort: 8090
      containerPort: 80
  - name: 2nd
    image: sudhams483/image-pull:latest
    volumeMounts:
    - name: html
      mountPath: /image-data
    command: ["/bin/bash", "-c"]
    args:
      - while true; do
          cd /image-data
          git config pull.ff only
          git pull
        done
---
apiVersion: v1
kind: Pod
metadata:
  name: sidecar-pod # Name of our pod
spec:
  volumes:
  - name: image-data  # Creating a shared volume for my containers
    emptyDir: {}
  containers:
  - name: sidecar-container # Name of first container
    image: git-pull # Image to use for first container
    args: ["-c", "cd /image-data; git config pull.ff only; watch -n 60 git pull"] # writing date every 10secs
    volumeMounts:
    - name: image-data
      mountPath: /image-data # Mounting log dir so app can write to it.
  - name: webserver # Name of second container
    image: nginx:1.19.0 # Image for second container
    ports:
      - containerPort: 80 # Defining what port to use.
    volumeMounts:
    - name: image-data
      mountPath: /usr/share/nginx/html # Where nginx will serve the written file