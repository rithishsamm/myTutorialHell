#For v1.20 cluster we see issue in creating PV dynamically with NFS provisionar, to fix the issue:
#- --feature-gates=RemoveSelfLink=false add argument in apiserver manifest.

#StorageClass for NFS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-storage-class
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: k8ssudheerdemo.com/nfs
parameters:
  archiveOnDelete: "false"
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: nfs-server-provisioner
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-server-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-nfs-server-provisioner
subjects:
  - kind: ServiceAccount
    name: nfs-server-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: nfs-server-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-server-provisioner
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-server-provisioner
subjects:
  - kind: ServiceAccount
    name: nfs-server-provisioner
    # replace with namespace where provisioner is deployed
    namespace: default
roleRef:
  kind: Role
  name: leader-locking-nfs-server-provisioner
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-server-provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server-provisioner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-server-provisioner
    spec:
      serviceAccountName: nfs-server-provisioner
      containers:
        - name: nfs-client-provisioner
          image: k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2 #quay.io/external_storage/nfs-client-provisioner:latest
          volumeMounts:
            - name: nfs-server
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: k8ssudheerdemo.com/nfs
            - name: NFS_SERVER
              value: 10.182.0.6
            - name: NFS_PATH
              value: /var/tmp/nfs-data
      volumes:
        - name: nfs-server
          nfs:
            server: 10.182.0.6
            path: /var/nfs/nfs-data
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: test123
        - name: MYSQL_ROOT_HOST
          value: '%'
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: nfs-storage-class 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi